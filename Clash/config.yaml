#无引用全规则版本
#一些丢弃关键字
#流量|套餐|官网|邀请|免翻|群组|节点|订阅
# 机场订阅，名称不能重复
proxy-providers:
  机场名称: 
    type: http 
    interval: 1800
    health-check: 
      enable: true  
      url: https://www.gstatic.com/generate_204
      interval: 300 
      proxy: 🧱 直连 
    url: "订阅链接"

# 用于下载订阅时指定UA
global-ua: clash.meta
    
# 全局配置
port: 7890
socks-port: 7891
redir-port: 9797
mixed-port: 7893
tproxy-port: 9898
ipv6: false
allow-lan: true
unified-delay: true
tcp-concurrent: true
  
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"
  
# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: ui
external-ui-url: "https://ghp.ci/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# 匹配进程 always/strict/off
find-process-mode: strict
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 30

# 策略组选择和fakeip缓存
profile:
  store-selected: true
  store-fake-ip: true
  
# 流量嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    
# 代理模式
tun:
  enable: false
  stack: mixed
  mtu: 9000
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  
# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  # 模式切换 redir-host / fake-ip
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  # 模式切换 whitelist/blacklist 
  # 黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
    - "geosite:private"
    - "geosite:cn"
    - "+.market.xiaomi.com"
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver-policy:
    "rule-set:private_domain,cn_domain":
    - 223.5.5.5
    - 119.29.29.29
    "rule-set:geolocation-!cn":
      - "https://dns.cloudflare.com/dns-query"
      - "https://dns.google/dns-query"
 
   
proxies:
- name: "🧱 直连"
  type: direct
  udp: true

- name: "🌚 禁止广告"
  type: reject
  udp: true
 


# 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🔯 香港故转, 🔯 日本故转, 🇩🇪 德国自动, 🇳🇱 荷兰自动, 🇨🇦 加拿大自动,

# 策略组
proxy-groups:
  - {name: 🚀 节点选择, type: select, proxies: [ 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🗿 全部节点, 🎯 全球直连]}
  - {name: 💻 ChatGPT, type: select, proxies: [ 🎯 全球直连, 🇺🇲 美国自动]}
  - {name: 💬 Copilot, type: select, proxies: [ 🎯 全球直连, 🇺🇲 美国自动]}
  - {name: 👨🏿‍💻 GitHub, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🐬 OneDrive, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动]}
  - {name: 🚫 ADBlock, type: select, proxies: [ 🎯 全球直连, 🌚 禁止广告]}
  - {name: 🤖 AI, type: select, proxies: [ 🎯 全球直连, 🇺🇲 美国自动]}
  - {name: 🕊️ Twitter(X), type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 📲 Telegram, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 📹 YouTube, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🪁 NETFLIX, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🎥 DisneyPlus, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: ⛵ HBO, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🛶 PrimeVideo, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🎥 AppleTV+, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🚤 Emby, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动]}
  - {name: 🎻 Spotify, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🎧 Tiktok, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🎮 Game, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🛕 Steam, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动]}
  - {name: 🧊 Epic, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动]}
  - {name: 🥁 Nintendo, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: ✈️ Speedtest, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择]}
  - {name: 💶 PayPal, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🗽 谷歌服务, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动]}
  - {name: 📢 谷歌FCM, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🪟 微软服务, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择]}
  - {name: 🍎 苹果服务, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择]}
  - {name: 🍘️ 小米服务, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择]}
  - {name: 🎶 网易云音乐, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择]}
  - {name: 🪿 巴哈姆特, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择, 🇹🇼 台湾自动]}
  - {name: 📺 哔哩哔哩, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择]}
  - {name: 🛝 国内媒体, type: select, proxies: [ 🎯 全球直连, 🚀 节点选择]}
  - {name: 🎇 国外媒体, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🛒 国外电商, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🎯 全球直连, type: select, proxies: [ 🧱 直连 , 🏞 其它自动]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [ 🚀 节点选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇹🇷 土耳其节点, 🇭🇰 香港自动, 🇯🇵 日本自动, 🇺🇲 美国自动, 🇸🇬 新加坡自动, 🇹🇼 台湾自动, 🇰🇷 韩国自动, 🇬🇧 英国自动, 🇫🇷 法国自动, 🇹🇷 土耳其自动, 🏞 其它地区, 🧿 自动选择, 🏞 其它自动, 🎯 全球直连]}
  - {name: 🇭🇰 香港节点, type: select, include-all: true, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?i)日|jp|japan"}
  - {name: 🇺🇲 美国节点, type: select, include-all: true, filter: "(?i)美|us|unitedstates|united states"}  
  - {name: 🇸🇬 新加坡节点, type: select, include-all: true, filter: "(?i)(新|sg|singapore)"}
  - {name: 🇹🇼 台湾节点, type: select, include-all: true, filter: "(?i)台|新北|彰化|TW|Taiwan"}
  - {name: 🇰🇷 韩国节点, type: select, include-all: true, filter: "(?i)韩|Korea|KOR|首尔|KR|韓"}
#  - {name: 🇨🇦 加拿大节点, type: select, include-all: true, filter: "(?i)加|Canada|渥太华|温哥华|卡尔加里"}
  - {name: 🇬🇧 英国节点, type: select, include-all: true, filter: "(?i)英|英国|Great Britain"}
  - {name: 🇫🇷 法国节点, type: select, include-all: true, filter: "(?i)法|法国|France|巴黎"}
#  - {name: 🇩🇪 德国节点, type: select, include-all: true, filter: "(?i)德|德国|Germany|柏林|法兰克福"}
#  - {name: 🇳🇱 荷兰节点, type: select, include-all: true, filter: "(?i)荷|荷兰|Netherlands|阿姆斯特丹"}
  - {name: 🇹🇷 土耳其节点, type: select, include-all: true, filter: "(?i)土|土耳其|Turkey|Türkiye"}
  - {name: 🏞 其它地区, type: select, include-all: true, filter: "(?i)^(?!.*(?:港|hk|hongkong|hong kong|日|jp|japan|美|us|unitedstates|united states|新|新加坡|狮城|SG|Singapore|台|新北|彰化|TW|Taiwan|韩|Korea|KOR|首尔|KR|韓|英|英国|Great Britain|法|法国|France|巴黎|土|土耳其|Turkey|Türkiye|群组|流量|订阅|邀请|官网|免翻|套餐|直连)).*"}

                  
#港|台|日|韩|新|美|加|英|法|德|荷|土|
#  - {name: 🔯 香港故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
#  - {name: 🔯 日本故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: 🇭🇰 香港自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|🇭🇰|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  - {name: 🇯🇵 日本自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|🇯🇵|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: 🇺🇲 美国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(美|US|🇺🇲|(?i)States|America))^((?!(港|台|日|韩|新)).)*$"}
#  - {name:  新加坡自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(新|SG|🇸🇬|(?i)Singapore))^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|美|us|unitedstates)).*"}
  - {name: 🇸🇬 新加坡自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(坡|SG|🇸🇬|(?i)sing|新加坡))^((?!(港|台|日|韩|美)).)*$"}
  - {name: 🇹🇼 台湾自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*((?i)台|新北|彰化|TW|🇹🇼|Taiwan))^((?!(港|日|韩|新|美|加|英|法|德|荷|土)).)*$"}  
  - {name: 🇰🇷 韩国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*((?i)韩|Korea|KOR|首尔|KR|🇰🇷|韓))^((?!(港|台|日|新|美|加|英|法|德|荷|土)).)*$"}
#  - {name: 🇨🇦 加拿大自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*((?i)加|Canada|🇨🇦|渥太华|温哥华|卡尔加里))^((?!(港|台|日|韩|新|美|英|法|德|荷|土)).)*$"}
  - {name: 🇬🇧 英国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*((?i)英|英国|Britain|🇬🇧|Great Britain))^((?!(港|台|日|韩|新|美|加|法|德|荷|土)).)*$"}
  - {name: 🇫🇷 法国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*((?i)法|法国|France|🇫🇷|巴黎))^((?!(港|台|日|韩|新|美|加|英|德|荷|土)).)*$"}
#  - {name: 🇩🇪 德国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*((?i)德|德国|🇩🇪|Germany|柏林|法兰克福))^((?!(港|台|日|韩|新|美|加|英|法|荷|土)).)*$"}
#  - {name: 🇳🇱 荷兰自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*((?i)荷|荷兰|🇳🇱|Netherlands|阿姆斯特丹))^((?!(港|台|日|韩|新|美|加|英|法|德|土)).)*$"}
  - {name: 🇹🇷 土耳其自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*((?i)土|土耳其|🇹🇷|Turkey|Türkiye))^((?!(港|台|日|韩|新|美|加|英|法|德|荷)).)*$"}
  - {name: 🏞 其它自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|hong|台|tw|taiwan|日|jp|japan|新|sg|singapore|美|us|unitedstates|states|韩|Korea|KOR|首尔|KR|韓|加|Canada|英|英国|Britain|法|法国|France|德|德国|Germany|荷|荷兰|Netherlands|土|土耳其|Turkey|Türkiye|群组|流量|订阅|邀请|官网|免翻|套餐|直连)).*"}
  - {name: 🧿 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(群组|流量|订阅|邀请|官网|免翻|套餐|直连)).)*$"}
  - {name: 🗿 全部节点, type: select, include-all: true, filter: "^((?!(群组|流量|订阅|邀请|官网|免翻|套餐|直连)).)*$"}
rules:
  #📢 谷歌FCM
  - RULE-SET,Lan,🎯 全球直连
  - RULE-SET,Direct,🎯 全球直连
  - RULE-SET,private_domain,🧱 直连
  - RULE-SET,Custom_Direct,🎯 全球直连
  - RULE-SET,proxylite,🚀 节点选择
  - RULE-SET,Custom_Proxy,🚀 节点选择
  - RULE-SET,GoogleFCM,📢 谷歌FCM
  - RULE-SET,GoogleCN,🎯 全球直连
  - RULE-SET,GoogleCNProxyIP,🚀 节点选择
  - RULE-SET,SteamCN,🎯 全球直连
  - RULE-SET,SteamCDN,🎯 全球直连
  - RULE-SET,PrivateTracker,🎯 全球直连
  - RULE-SET,Block-rule, 🚫 ADBlock
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,Telegram,📲 Telegram
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,Twitter,🕊️ Twitter(X)
  - RULE-SET,OpenAI,💻 ChatGPT
  - RULE-SET,Copilot,💬 Copilot
  - RULE-SET,Claude,🤖 AI
  - RULE-SET,Gemini,🤖 AI
  - RULE-SET,ai,🤖 AI
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,GitHub,👨🏿‍💻 GitHub
  - RULE-SET,speedtest_domain,✈️ Speedtest
  - RULE-SET,Speedtest,✈️ Speedtest
  - RULE-SET,apple_domain,🍎 苹果服务
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,paypal_domain,💶 PayPal
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,microsoft_domain,🪟 微软服务
  - RULE-SET,Microsoft,🪟 微软服务
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,YouTube,📹 YouTube 
  - RULE-SET,AppleTV,🎥 AppleTV+
  - RULE-SET,google_domain,🗽 谷歌服务
  - RULE-SET,Google,🗽 谷歌服务
  - RULE-SET,google_ip,🗽 谷歌服务,no-resolve
  - RULE-SET,XiaoMi,🍘️ 小米服务
  - RULE-SET,tiktok_domain,🎧 Tiktok
  - RULE-SET,TikTok,🎧 Tiktok
  - RULE-SET,netflix_domain,🪁 NETFLIX
  - RULE-SET,Netflix,🪁 NETFLIX
  - RULE-SET,netflix_ip,🪁 NETFLIX,no-resolve
  - RULE-SET,Disney,🎥 DisneyPlus
  - RULE-SET,HBO,⛵ HBO
  - RULE-SET,AmazonPrimeVideo,🛶 PrimeVideo
  - RULE-SET,Emby,🚤 Emby
  - RULE-SET,Emby_domain,🚤 Emby
  - RULE-SET,Spotify,🎻 Spotify
  - RULE-SET,Bahamut,🪿 巴哈姆特
  - RULE-SET,NetEaseMusic,🎶 网易云音乐
  - RULE-SET,bilibili,📺 哔哩哔哩
  - RULE-SET,ChinaMedia,🛝 国内媒体
  - RULE-SET,GlobalMedia,🎇 国外媒体
  - RULE-SET,Amazon,🛒 国外电商
  - RULE-SET,AmazonIP,🛒 国外电商
  - RULE-SET,Shopee,🛒 国外电商
  - RULE-SET,Shopify,🛒 国外电商
  - RULE-SET,Ozon,🛒 国外电商
  - RULE-SET,Epic,🧊 Epic
  - RULE-SET,EA,🎮 Game
  - RULE-SET,Blizzard,🎮 Game
  - RULE-SET,UBI,🎮 Game
  - RULE-SET,Sony,🎮 Game
  - RULE-SET,Nintendo,🥁 Nintendo
  - RULE-SET,Steam,🛕 Steam
  - RULE-SET,ProxyGFWlist,🚀 节点选择
  - RULE-SET,geolocation-!cn,🚀 节点选择
  - RULE-SET,ChinaDomain,🎯 全球直连
  - RULE-SET,cn_domain,🎯 全球直连
  - RULE-SET,ChinaCompanyIp,🎯 全球直连,no-resolve
  - RULE-SET,cn_ip,🎯 全球直连,no-resolve
  - RULE-SET,ChinaIp,🎯 全球直连,no-resolve
  - RULE-SET,Download,🎯 全球直连,no-resolve
  - MATCH,🐟 漏网之鱼

#rule-anchor:
#  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
#  ipc: &ipc {type: http, interval: 86400, behavior: ipcidr, format: text}
#  domain1: &domain1 {type: http, interval: 86400, behavior: domain, format: mrs}
#  qcy: &qcy {type: http, interval: 86400, behavior: domain, format: text}
#  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  private_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  proxylite: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/ProxyLite.list"}
  ai: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/AI.list"}
  youtube_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  tiktok_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  
  cn_domain: {type: http, interval: 86400, behavior: domain, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}  
  cn_ip: {type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: {type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: {type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: {type: http, interval: 86400, behavior: ipcidr, format: mrs, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  
  Lan: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.list"}
  Direct: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct.list"}
  Custom_Direct: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/Aethersailor/Custom_OpenClash_Rules/main/rule/Custom_Direct.list"}
  Custom_Proxy: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/Aethersailor/Custom_OpenClash_Rules/main/rule/Custom_Proxy.list"}
  GoogleFCM: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GoogleFCM/GoogleFCM.list"}
  GoogleCN: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list"}
  GoogleCNProxyIP: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/GoogleCNProxyIP.list"}
  SteamCN: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SteamCN/SteamCN.list"}
  SteamCDN: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/Aethersailor/Custom_OpenClash_Rules/main/rule/Steam_CDN.list"}
  PrivateTracker: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PrivateTracker/PrivateTracker.list"}
  Telegram: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list"}
  Twitter: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitter/Twitter.list"}
  OpenAI: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.list"}
  Copilot: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Copilot/Copilot.list"}
  Claude: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Claude/Claude.list"}
  Gemini: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Gemini/Gemini.list"}
  GitHub: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GitHub/GitHub.list"}
  Speedtest: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.list"}
  Apple: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple.list"}
  Microsoft: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.list"}
  YouTube: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.list"}
  Google: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.list"}
  XiaoMi: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/XiaoMi/XiaoMi.list"}
  TikTok: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TikTok/TikTok.list"}
  Netflix: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list"}
  Disney: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.list"}
  HBO: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBO/HBO.list"}
  AmazonPrimeVideo: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AmazonPrimeVideo/AmazonPrimeVideo.list"}
  Emby: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Emby/Emby.list"}
  Emby_domain: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/ddgksf2013/Filter/refs/heads/master/Emby.list"}
  Spotify: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.list"}
  Bahamut: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bahamut/Bahamut.list"}
  NetEaseMusic: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/NetEaseMusic/NetEaseMusic.list"}
  ChinaMedia: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMedia/ChinaMedia.list"}
  GlobalMedia: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia.list"}
  Amazon: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Amazon/Amazon.list"}
  AmazonIP: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AmazonIP/AmazonIP.list"}
  Shopee: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Shopee/Shopee.list"}
  Shopify: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Shopify/Shopify.list"}
  Ozon: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/Aethersailor/Custom_OpenClash_Rules/main/rule/Ozon.list"}
  Epic: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Epic/Epic.list"}
  EA: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/EA/EA.list"}
  Blizzard: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Blizzard/Blizzard.list"}
  UBI: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/UBI/UBI.list"}
  Sony: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Sony/Sony.list"}
  Nintendo: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Nintendo/Nintendo.list"}
  Steam: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Steam/Steam.list"}
  ProxyGFWlist: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list"}
  ChinaDomain: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list"}
  ChinaCompanyIp: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list"}
  ChinaIp: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaIp.list"}
  Download: {type: http, interval: 86400, behavior: classical, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Download/Download.list"}
  bilibili: {type: http, interval: 86400, behavior: domain, format: text, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.list"}
  AppleTV: {type: http, interval: 86400, behavior: domain, format: text, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AppleTV/AppleTV.list"}

  Block-rule: {type: http, interval: 86400, behavior: domain, format: text, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ads-all.yaml"}
